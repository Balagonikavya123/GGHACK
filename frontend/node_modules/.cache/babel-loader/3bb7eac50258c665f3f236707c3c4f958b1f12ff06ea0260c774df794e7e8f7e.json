{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\B KAVYA\\\\Downloads\\\\GGHACK-main\\\\frontend\\\\src\\\\pages\\\\Community.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Community.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Community = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [pollOptions, setPollOptions] = useState(['Option 1', 'Option 2']);\n  const [pollVotes, setPollVotes] = useState(Array(pollOptions.length).fill(0));\n  const [pollQuestion, setPollQuestion] = useState('');\n  const handlePost = (image, caption) => {\n    const newPost = {\n      image,\n      caption,\n      comments: [],\n      poll: null\n    };\n    setPosts([...posts, newPost]);\n  };\n  const handleComment = (index, comment) => {\n    const updatedPosts = [...posts];\n    updatedPosts[index].comments.push(comment);\n    setPosts(updatedPosts);\n  };\n  const handlePollVote = (postIndex, optionIndex) => {\n    const updatedPosts = [...posts];\n    updatedPosts[postIndex].poll.votes[optionIndex] += 1;\n    setPosts(updatedPosts);\n  };\n  const handleCreatePoll = (index, question, options) => {\n    const updatedPosts = [...posts];\n    updatedPosts[index].poll = {\n      question,\n      options,\n      votes: Array(options.length).fill(0)\n    };\n    setPosts(updatedPosts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"community\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"community-title\",\n      children: \"Community\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-creation\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        id: \"imageInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write a caption...\",\n        id: \"captionInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post-button\",\n        onClick: () => handlePost(document.getElementById('imageInput').files[0], document.getElementById('captionInput').value),\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(post.image),\n          alt: \"Generated\",\n          className: \"post-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-caption\",\n          children: post.caption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), post.comments.map((comment, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"comment\",\n            children: comment\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Add a comment...\",\n              value: newComment,\n              onChange: e => setNewComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleComment(index, newComment),\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), post.poll ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.poll.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), post.poll.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handlePollVote(index, i),\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [post.poll.votes[i], \" votes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-creation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create a Poll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Poll question\",\n            onChange: e => setPollQuestion(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), pollOptions.map((option, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: option,\n            onChange: e => {\n              const updatedOptions = [...pollOptions];\n              updatedOptions[i] = e.target.value;\n              setPollOptions(updatedOptions);\n            }\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCreatePoll(index, pollQuestion, pollOptions),\n            children: \"Add Poll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Community, \"E2fr37ofLB2grrCK0UzFv5p5p7M=\");\n_c = Community;\nexport default Community;\nvar _c;\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Community","_s","posts","setPosts","newComment","setNewComment","pollOptions","setPollOptions","pollVotes","setPollVotes","Array","length","fill","pollQuestion","setPollQuestion","handlePost","image","caption","newPost","comments","poll","handleComment","index","comment","updatedPosts","push","handlePollVote","postIndex","optionIndex","votes","handleCreatePoll","question","options","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","id","placeholder","onClick","document","getElementById","files","value","map","post","src","URL","createObjectURL","alt","i","onChange","e","target","option","updatedOptions","_c","$RefreshReg$"],"sources":["C:/Users/B KAVYA/Downloads/GGHACK-main/frontend/src/pages/Community.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Community.css';\r\n\r\nconst Community = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [pollOptions, setPollOptions] = useState(['Option 1', 'Option 2']);\r\n  const [pollVotes, setPollVotes] = useState(Array(pollOptions.length).fill(0));\r\n  const [pollQuestion, setPollQuestion] = useState('');\r\n\r\n  const handlePost = (image, caption) => {\r\n    const newPost = { image, caption, comments: [], poll: null };\r\n    setPosts([...posts, newPost]);\r\n  };\r\n\r\n  const handleComment = (index, comment) => {\r\n    const updatedPosts = [...posts];\r\n    updatedPosts[index].comments.push(comment);\r\n    setPosts(updatedPosts);\r\n  };\r\n\r\n  const handlePollVote = (postIndex, optionIndex) => {\r\n    const updatedPosts = [...posts];\r\n    updatedPosts[postIndex].poll.votes[optionIndex] += 1;\r\n    setPosts(updatedPosts);\r\n  };\r\n\r\n  const handleCreatePoll = (index, question, options) => {\r\n    const updatedPosts = [...posts];\r\n    updatedPosts[index].poll = {\r\n      question,\r\n      options,\r\n      votes: Array(options.length).fill(0),\r\n    };\r\n    setPosts(updatedPosts);\r\n  };\r\n\r\n  return (\r\n    <div className=\"community\">\r\n      <h1 className=\"community-title\">Community</h1>\r\n\r\n      {/* Post Section */}\r\n      <div className=\"post-creation\">\r\n        <h2>Create a Post</h2>\r\n        <input type=\"file\" accept=\"image/*\" id=\"imageInput\" />\r\n        <input type=\"text\" placeholder=\"Write a caption...\" id=\"captionInput\" />\r\n        <button\r\n          className=\"post-button\"\r\n          onClick={() =>\r\n            handlePost(\r\n              document.getElementById('imageInput').files[0],\r\n              document.getElementById('captionInput').value\r\n            )\r\n          }\r\n        >\r\n          Post\r\n        </button>\r\n      </div>\r\n\r\n      {/* Posts Display */}\r\n      <div className=\"posts\">\r\n        {posts.map((post, index) => (\r\n          <div key={index} className=\"post\">\r\n            <img src={URL.createObjectURL(post.image)} alt=\"Generated\" className=\"post-image\" />\r\n            <p className=\"post-caption\">{post.caption}</p>\r\n\r\n            {/* Comments Section */}\r\n            <div className=\"comments-section\">\r\n              <h3>Comments</h3>\r\n              {post.comments.map((comment, i) => (\r\n                <p key={i} className=\"comment\">{comment}</p>\r\n              ))}\r\n              <div className=\"comment-input\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Add a comment...\"\r\n                  value={newComment}\r\n                  onChange={(e) => setNewComment(e.target.value)}\r\n                />\r\n                <button onClick={() => handleComment(index, newComment)}>Comment</button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Poll Section */}\r\n            {post.poll ? (\r\n              <div className=\"poll-section\">\r\n                <h3>{post.poll.question}</h3>\r\n                {post.poll.options.map((option, i) => (\r\n                  <div key={i} className=\"poll-option\">\r\n                    <button onClick={() => handlePollVote(index, i)}>{option}</button>\r\n                    <span>{post.poll.votes[i]} votes</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"poll-creation\">\r\n                <h3>Create a Poll</h3>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Poll question\"\r\n                  onChange={(e) => setPollQuestion(e.target.value)}\r\n                />\r\n                {pollOptions.map((option, i) => (\r\n                  <input\r\n                    key={i}\r\n                    type=\"text\"\r\n                    value={option}\r\n                    onChange={(e) => {\r\n                      const updatedOptions = [...pollOptions];\r\n                      updatedOptions[i] = e.target.value;\r\n                      setPollOptions(updatedOptions);\r\n                    }}\r\n                  />\r\n                ))}\r\n                <button\r\n                  onClick={() => handleCreatePoll(index, pollQuestion, pollOptions)}\r\n                >\r\n                  Add Poll\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Community;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}